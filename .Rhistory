getwd()
create_package("D:/seasonality/seasonal-spline/sGPfit")
library(availiable)
library(roxygen2)
create_package("D:/seasonality/seasonal-spline/sGPfit")
load_all()
library(devtools)
load_all()
create_package("D:/seasonality/seasonal-spline/sGPfit")
library(devtools)
create_package("D:/seasonality/sGPfit")
library(devtools)
library(sGPfit)
Matrix::as()
?Matrix::as()
rmvnp
mvrnorm
mvtnorm::mvrnorm
?as
document()
document()
document()
document()
document()
library(sGPfit)
library(sGPfit)
document()
?sGPfit::library.dynam.unload()
?gaussian
?gaussprocess
library(sGPfit)
sG
gaussprocess(from = 0, to = 1, K = function(s, t) {min(s, t)}, start = 0, m = 1000)
gaussprocess(from = 0, to = 1, K = function(s, t) {min(s, t)}, start = 0, m = 100)
library(sGPfit)
gaussprocess(from = 0, to = 1, K = function(s, t) {min(s, t)}, start = 0, m = 10)
generate_K_true(1,1)
fun <- generate_K_true(1,1)
fun(1,2)
compute_matrix_given_cov(from = 0, to = 1, m = 10, K = fun)
joint_prec_construct(t_vec = c(1,2,3), a = 1, sd = 1)
Compute_Q_Bt(a = 1, k = 3, region = c(0,1))
Compute_Q_Bt(a = 1, k = 5, region = c(0,1))
?Matrix::t()
Matrix::t()
Matrix::t(s)
Matrix::t(1)
Matrix::as()
Matrix::as(1)
library(sGPfit)
Compute_Q_Bt(a = 1, k = 5, region = c(0,1))
library(sGPfit)
Compute_Q_Bt(a = 1, k = 5, region = c(0,1))
library(sGPfit)
Compute_Q_Bt(a = 1, k = 5, region = c(0,1))
library(sGPfit)
Compute_Q_Bt(a = 1, k = 5, region = c(0,1))
Compute_Q_Bt(a = 1, k = 5, region = c(0,1))
Bcos
t(Bcos)
Matrix::t(Bcos)
library(Matrix)
t(Bcos)
Bcos
B2cos
t(Bcos)
t(Bcos)
?t()
Matrix::t(Bcos)
UseMethod(t)
UseMethod("t")
library(sGPfit)
documents()
library(devtools)
document()
document()
document()
library(sGPfit)
Compute_Q_Bt(a = 1, k = 5, region = c(0,1))
Compute_B_Bt(x = c(1,2,3), a = 1, k = 5, region = c(0,1))
Compute_B_Bt(x = c(1,2,3), a = 1, k = 5, region = c(0,3))
sampling_from_weights(x = c(1,2,3), a = 1, k = 5, region = c(0,5))
document()
library(sGPfit)
document()
